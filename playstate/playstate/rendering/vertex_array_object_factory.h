#pragma once

#include <gl/glew.h>

namespace playstate
{
	//
	// Factory used by the rendering system to create so-called VertexArrayObjects for a specific type.
	// It binds a specific element entry (such as the position in the PositionData structure) to a specific 
	// OpenGL layout location. 
	//
	// In cases where the developers need to create their own VertexBuffer strucutres, they must also create a 
	// VertexArrayObject factory to match the data so that the shader knows how to handle it.
	//
	// @see playstate::VertexDeclarationArrayObjectFactory for information about how to create custom
	//	VertexArrayObject factories. This is the default way to map custom vertex buffers.
	//
	// @note If you are in the optimization phase of your project then you can create a VertexArrayObject factory by inheriting 
	//	the IVertexArrayObjectFactory interface directly. See wiki for more information about this.
	//
	class IVertexArrayObjectFactory
	{
	public:
		virtual ~IVertexArrayObjectFactory() {}

	public:
		//
		// Creates a vertex array object based on the supplied vertex buffer
		//
		// @param bufferId the OpenGL VertexBuffer object
		// @return The VertexArrayObject ID generated by OpenGL
		virtual GLuint CreateVertexArray(GLuint bufferId) const = 0;
	};
}
